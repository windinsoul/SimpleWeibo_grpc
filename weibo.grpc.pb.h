// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: weibo.proto
#ifndef GRPC_weibo_2eproto__INCLUDED
#define GRPC_weibo_2eproto__INCLUDED

#include "weibo.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace weibo {

// protoc -I ./ --cpp_out=. weibo.proto
// protoc -I ./ --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` weibo.proto
class Weibo final {
 public:
  static constexpr char const* service_full_name() {
    return "weibo.Weibo";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Regist(::grpc::ClientContext* context, const ::weibo::RegistReq& request, ::weibo::RegistRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::RegistRes>> AsyncRegist(::grpc::ClientContext* context, const ::weibo::RegistReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::RegistRes>>(AsyncRegistRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::RegistRes>> PrepareAsyncRegist(::grpc::ClientContext* context, const ::weibo::RegistReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::RegistRes>>(PrepareAsyncRegistRaw(context, request, cq));
    }
    virtual ::grpc::Status Login(::grpc::ClientContext* context, const ::weibo::LoginReq& request, ::weibo::LoginRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::LoginRes>> AsyncLogin(::grpc::ClientContext* context, const ::weibo::LoginReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::LoginRes>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::LoginRes>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::weibo::LoginReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::LoginRes>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    virtual ::grpc::Status PublishPost(::grpc::ClientContext* context, const ::weibo::PublishPostReq& request, ::weibo::PublishPostRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::PublishPostRes>> AsyncPublishPost(::grpc::ClientContext* context, const ::weibo::PublishPostReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::PublishPostRes>>(AsyncPublishPostRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::PublishPostRes>> PrepareAsyncPublishPost(::grpc::ClientContext* context, const ::weibo::PublishPostReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::PublishPostRes>>(PrepareAsyncPublishPostRaw(context, request, cq));
    }
    virtual ::grpc::Status Follow(::grpc::ClientContext* context, const ::weibo::FollowReq& request, ::weibo::Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>> AsyncFollow(::grpc::ClientContext* context, const ::weibo::FollowReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>>(AsyncFollowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>> PrepareAsyncFollow(::grpc::ClientContext* context, const ::weibo::FollowReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>>(PrepareAsyncFollowRaw(context, request, cq));
    }
    virtual ::grpc::Status CommentOnPost(::grpc::ClientContext* context, const ::weibo::CommentReq& request, ::weibo::Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>> AsyncCommentOnPost(::grpc::ClientContext* context, const ::weibo::CommentReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>>(AsyncCommentOnPostRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>> PrepareAsyncCommentOnPost(::grpc::ClientContext* context, const ::weibo::CommentReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>>(PrepareAsyncCommentOnPostRaw(context, request, cq));
    }
    virtual ::grpc::Status Like(::grpc::ClientContext* context, const ::weibo::LikeReq& request, ::weibo::Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>> AsyncLike(::grpc::ClientContext* context, const ::weibo::LikeReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>>(AsyncLikeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>> PrepareAsyncLike(::grpc::ClientContext* context, const ::weibo::LikeReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>>(PrepareAsyncLikeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::PostRes>> GetHot(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::PostRes>>(GetHotRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>> AsyncGetHot(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>>(AsyncGetHotRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>> PrepareAsyncGetHot(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>>(PrepareAsyncGetHotRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::HotTopicRes>> GetHotTopic(::grpc::ClientContext* context, const ::weibo::Blank& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::HotTopicRes>>(GetHotTopicRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::HotTopicRes>> AsyncGetHotTopic(::grpc::ClientContext* context, const ::weibo::Blank& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::HotTopicRes>>(AsyncGetHotTopicRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::HotTopicRes>> PrepareAsyncGetHotTopic(::grpc::ClientContext* context, const ::weibo::Blank& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::HotTopicRes>>(PrepareAsyncGetHotTopicRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::PostRes>> GetPostByTopicId(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::PostRes>>(GetPostByTopicIdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>> AsyncGetPostByTopicId(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>>(AsyncGetPostByTopicIdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>> PrepareAsyncGetPostByTopicId(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>>(PrepareAsyncGetPostByTopicIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::PostRes>> GetPostByUserId(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::PostRes>>(GetPostByUserIdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>> AsyncGetPostByUserId(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>>(AsyncGetPostByUserIdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>> PrepareAsyncGetPostByUserId(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>>(PrepareAsyncGetPostByUserIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::PostRes>> PostFeedByRecommend(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::PostRes>>(PostFeedByRecommendRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>> AsyncPostFeedByRecommend(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>>(AsyncPostFeedByRecommendRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>> PrepareAsyncPostFeedByRecommend(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>>(PrepareAsyncPostFeedByRecommendRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::PostRes>> PostFeedByFollow(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::weibo::PostRes>>(PostFeedByFollowRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>> AsyncPostFeedByFollow(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>>(AsyncPostFeedByFollowRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>> PrepareAsyncPostFeedByFollow(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>>(PrepareAsyncPostFeedByFollowRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Regist(::grpc::ClientContext* context, const ::weibo::RegistReq* request, ::weibo::RegistRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Regist(::grpc::ClientContext* context, const ::weibo::RegistReq* request, ::weibo::RegistRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Login(::grpc::ClientContext* context, const ::weibo::LoginReq* request, ::weibo::LoginRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Login(::grpc::ClientContext* context, const ::weibo::LoginReq* request, ::weibo::LoginRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PublishPost(::grpc::ClientContext* context, const ::weibo::PublishPostReq* request, ::weibo::PublishPostRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PublishPost(::grpc::ClientContext* context, const ::weibo::PublishPostReq* request, ::weibo::PublishPostRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Follow(::grpc::ClientContext* context, const ::weibo::FollowReq* request, ::weibo::Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Follow(::grpc::ClientContext* context, const ::weibo::FollowReq* request, ::weibo::Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CommentOnPost(::grpc::ClientContext* context, const ::weibo::CommentReq* request, ::weibo::Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CommentOnPost(::grpc::ClientContext* context, const ::weibo::CommentReq* request, ::weibo::Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Like(::grpc::ClientContext* context, const ::weibo::LikeReq* request, ::weibo::Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Like(::grpc::ClientContext* context, const ::weibo::LikeReq* request, ::weibo::Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetHot(::grpc::ClientContext* context, const ::weibo::GetHotPostReq* request, ::grpc::ClientReadReactor< ::weibo::PostRes>* reactor) = 0;
      virtual void GetHotTopic(::grpc::ClientContext* context, const ::weibo::Blank* request, ::grpc::ClientReadReactor< ::weibo::HotTopicRes>* reactor) = 0;
      virtual void GetPostByTopicId(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq* request, ::grpc::ClientReadReactor< ::weibo::PostRes>* reactor) = 0;
      virtual void GetPostByUserId(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq* request, ::grpc::ClientReadReactor< ::weibo::PostRes>* reactor) = 0;
      virtual void PostFeedByRecommend(::grpc::ClientContext* context, const ::weibo::PostFeedReq* request, ::grpc::ClientReadReactor< ::weibo::PostRes>* reactor) = 0;
      virtual void PostFeedByFollow(::grpc::ClientContext* context, const ::weibo::PostFeedReq* request, ::grpc::ClientReadReactor< ::weibo::PostRes>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::RegistRes>* AsyncRegistRaw(::grpc::ClientContext* context, const ::weibo::RegistReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::RegistRes>* PrepareAsyncRegistRaw(::grpc::ClientContext* context, const ::weibo::RegistReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::LoginRes>* AsyncLoginRaw(::grpc::ClientContext* context, const ::weibo::LoginReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::LoginRes>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::weibo::LoginReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::PublishPostRes>* AsyncPublishPostRaw(::grpc::ClientContext* context, const ::weibo::PublishPostReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::PublishPostRes>* PrepareAsyncPublishPostRaw(::grpc::ClientContext* context, const ::weibo::PublishPostReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>* AsyncFollowRaw(::grpc::ClientContext* context, const ::weibo::FollowReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>* PrepareAsyncFollowRaw(::grpc::ClientContext* context, const ::weibo::FollowReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>* AsyncCommentOnPostRaw(::grpc::ClientContext* context, const ::weibo::CommentReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>* PrepareAsyncCommentOnPostRaw(::grpc::ClientContext* context, const ::weibo::CommentReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>* AsyncLikeRaw(::grpc::ClientContext* context, const ::weibo::LikeReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::weibo::Response>* PrepareAsyncLikeRaw(::grpc::ClientContext* context, const ::weibo::LikeReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::weibo::PostRes>* GetHotRaw(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>* AsyncGetHotRaw(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>* PrepareAsyncGetHotRaw(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::weibo::HotTopicRes>* GetHotTopicRaw(::grpc::ClientContext* context, const ::weibo::Blank& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::HotTopicRes>* AsyncGetHotTopicRaw(::grpc::ClientContext* context, const ::weibo::Blank& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::HotTopicRes>* PrepareAsyncGetHotTopicRaw(::grpc::ClientContext* context, const ::weibo::Blank& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::weibo::PostRes>* GetPostByTopicIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>* AsyncGetPostByTopicIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>* PrepareAsyncGetPostByTopicIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::weibo::PostRes>* GetPostByUserIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>* AsyncGetPostByUserIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>* PrepareAsyncGetPostByUserIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::weibo::PostRes>* PostFeedByRecommendRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>* AsyncPostFeedByRecommendRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>* PrepareAsyncPostFeedByRecommendRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::weibo::PostRes>* PostFeedByFollowRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>* AsyncPostFeedByFollowRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::weibo::PostRes>* PrepareAsyncPostFeedByFollowRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Regist(::grpc::ClientContext* context, const ::weibo::RegistReq& request, ::weibo::RegistRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::RegistRes>> AsyncRegist(::grpc::ClientContext* context, const ::weibo::RegistReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::RegistRes>>(AsyncRegistRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::RegistRes>> PrepareAsyncRegist(::grpc::ClientContext* context, const ::weibo::RegistReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::RegistRes>>(PrepareAsyncRegistRaw(context, request, cq));
    }
    ::grpc::Status Login(::grpc::ClientContext* context, const ::weibo::LoginReq& request, ::weibo::LoginRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::LoginRes>> AsyncLogin(::grpc::ClientContext* context, const ::weibo::LoginReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::LoginRes>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::LoginRes>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::weibo::LoginReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::LoginRes>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    ::grpc::Status PublishPost(::grpc::ClientContext* context, const ::weibo::PublishPostReq& request, ::weibo::PublishPostRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::PublishPostRes>> AsyncPublishPost(::grpc::ClientContext* context, const ::weibo::PublishPostReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::PublishPostRes>>(AsyncPublishPostRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::PublishPostRes>> PrepareAsyncPublishPost(::grpc::ClientContext* context, const ::weibo::PublishPostReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::PublishPostRes>>(PrepareAsyncPublishPostRaw(context, request, cq));
    }
    ::grpc::Status Follow(::grpc::ClientContext* context, const ::weibo::FollowReq& request, ::weibo::Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>> AsyncFollow(::grpc::ClientContext* context, const ::weibo::FollowReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>>(AsyncFollowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>> PrepareAsyncFollow(::grpc::ClientContext* context, const ::weibo::FollowReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>>(PrepareAsyncFollowRaw(context, request, cq));
    }
    ::grpc::Status CommentOnPost(::grpc::ClientContext* context, const ::weibo::CommentReq& request, ::weibo::Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>> AsyncCommentOnPost(::grpc::ClientContext* context, const ::weibo::CommentReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>>(AsyncCommentOnPostRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>> PrepareAsyncCommentOnPost(::grpc::ClientContext* context, const ::weibo::CommentReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>>(PrepareAsyncCommentOnPostRaw(context, request, cq));
    }
    ::grpc::Status Like(::grpc::ClientContext* context, const ::weibo::LikeReq& request, ::weibo::Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>> AsyncLike(::grpc::ClientContext* context, const ::weibo::LikeReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>>(AsyncLikeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>> PrepareAsyncLike(::grpc::ClientContext* context, const ::weibo::LikeReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::weibo::Response>>(PrepareAsyncLikeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::weibo::PostRes>> GetHot(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::weibo::PostRes>>(GetHotRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>> AsyncGetHot(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>>(AsyncGetHotRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>> PrepareAsyncGetHot(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>>(PrepareAsyncGetHotRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::weibo::HotTopicRes>> GetHotTopic(::grpc::ClientContext* context, const ::weibo::Blank& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::weibo::HotTopicRes>>(GetHotTopicRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::HotTopicRes>> AsyncGetHotTopic(::grpc::ClientContext* context, const ::weibo::Blank& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::HotTopicRes>>(AsyncGetHotTopicRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::HotTopicRes>> PrepareAsyncGetHotTopic(::grpc::ClientContext* context, const ::weibo::Blank& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::HotTopicRes>>(PrepareAsyncGetHotTopicRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::weibo::PostRes>> GetPostByTopicId(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::weibo::PostRes>>(GetPostByTopicIdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>> AsyncGetPostByTopicId(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>>(AsyncGetPostByTopicIdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>> PrepareAsyncGetPostByTopicId(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>>(PrepareAsyncGetPostByTopicIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::weibo::PostRes>> GetPostByUserId(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::weibo::PostRes>>(GetPostByUserIdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>> AsyncGetPostByUserId(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>>(AsyncGetPostByUserIdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>> PrepareAsyncGetPostByUserId(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>>(PrepareAsyncGetPostByUserIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::weibo::PostRes>> PostFeedByRecommend(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::weibo::PostRes>>(PostFeedByRecommendRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>> AsyncPostFeedByRecommend(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>>(AsyncPostFeedByRecommendRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>> PrepareAsyncPostFeedByRecommend(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>>(PrepareAsyncPostFeedByRecommendRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::weibo::PostRes>> PostFeedByFollow(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::weibo::PostRes>>(PostFeedByFollowRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>> AsyncPostFeedByFollow(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>>(AsyncPostFeedByFollowRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>> PrepareAsyncPostFeedByFollow(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::weibo::PostRes>>(PrepareAsyncPostFeedByFollowRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Regist(::grpc::ClientContext* context, const ::weibo::RegistReq* request, ::weibo::RegistRes* response, std::function<void(::grpc::Status)>) override;
      void Regist(::grpc::ClientContext* context, const ::weibo::RegistReq* request, ::weibo::RegistRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Login(::grpc::ClientContext* context, const ::weibo::LoginReq* request, ::weibo::LoginRes* response, std::function<void(::grpc::Status)>) override;
      void Login(::grpc::ClientContext* context, const ::weibo::LoginReq* request, ::weibo::LoginRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PublishPost(::grpc::ClientContext* context, const ::weibo::PublishPostReq* request, ::weibo::PublishPostRes* response, std::function<void(::grpc::Status)>) override;
      void PublishPost(::grpc::ClientContext* context, const ::weibo::PublishPostReq* request, ::weibo::PublishPostRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Follow(::grpc::ClientContext* context, const ::weibo::FollowReq* request, ::weibo::Response* response, std::function<void(::grpc::Status)>) override;
      void Follow(::grpc::ClientContext* context, const ::weibo::FollowReq* request, ::weibo::Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CommentOnPost(::grpc::ClientContext* context, const ::weibo::CommentReq* request, ::weibo::Response* response, std::function<void(::grpc::Status)>) override;
      void CommentOnPost(::grpc::ClientContext* context, const ::weibo::CommentReq* request, ::weibo::Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Like(::grpc::ClientContext* context, const ::weibo::LikeReq* request, ::weibo::Response* response, std::function<void(::grpc::Status)>) override;
      void Like(::grpc::ClientContext* context, const ::weibo::LikeReq* request, ::weibo::Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetHot(::grpc::ClientContext* context, const ::weibo::GetHotPostReq* request, ::grpc::ClientReadReactor< ::weibo::PostRes>* reactor) override;
      void GetHotTopic(::grpc::ClientContext* context, const ::weibo::Blank* request, ::grpc::ClientReadReactor< ::weibo::HotTopicRes>* reactor) override;
      void GetPostByTopicId(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq* request, ::grpc::ClientReadReactor< ::weibo::PostRes>* reactor) override;
      void GetPostByUserId(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq* request, ::grpc::ClientReadReactor< ::weibo::PostRes>* reactor) override;
      void PostFeedByRecommend(::grpc::ClientContext* context, const ::weibo::PostFeedReq* request, ::grpc::ClientReadReactor< ::weibo::PostRes>* reactor) override;
      void PostFeedByFollow(::grpc::ClientContext* context, const ::weibo::PostFeedReq* request, ::grpc::ClientReadReactor< ::weibo::PostRes>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::weibo::RegistRes>* AsyncRegistRaw(::grpc::ClientContext* context, const ::weibo::RegistReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::RegistRes>* PrepareAsyncRegistRaw(::grpc::ClientContext* context, const ::weibo::RegistReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::LoginRes>* AsyncLoginRaw(::grpc::ClientContext* context, const ::weibo::LoginReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::LoginRes>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::weibo::LoginReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::PublishPostRes>* AsyncPublishPostRaw(::grpc::ClientContext* context, const ::weibo::PublishPostReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::PublishPostRes>* PrepareAsyncPublishPostRaw(::grpc::ClientContext* context, const ::weibo::PublishPostReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::Response>* AsyncFollowRaw(::grpc::ClientContext* context, const ::weibo::FollowReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::Response>* PrepareAsyncFollowRaw(::grpc::ClientContext* context, const ::weibo::FollowReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::Response>* AsyncCommentOnPostRaw(::grpc::ClientContext* context, const ::weibo::CommentReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::Response>* PrepareAsyncCommentOnPostRaw(::grpc::ClientContext* context, const ::weibo::CommentReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::Response>* AsyncLikeRaw(::grpc::ClientContext* context, const ::weibo::LikeReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::weibo::Response>* PrepareAsyncLikeRaw(::grpc::ClientContext* context, const ::weibo::LikeReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::weibo::PostRes>* GetHotRaw(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request) override;
    ::grpc::ClientAsyncReader< ::weibo::PostRes>* AsyncGetHotRaw(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::weibo::PostRes>* PrepareAsyncGetHotRaw(::grpc::ClientContext* context, const ::weibo::GetHotPostReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::weibo::HotTopicRes>* GetHotTopicRaw(::grpc::ClientContext* context, const ::weibo::Blank& request) override;
    ::grpc::ClientAsyncReader< ::weibo::HotTopicRes>* AsyncGetHotTopicRaw(::grpc::ClientContext* context, const ::weibo::Blank& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::weibo::HotTopicRes>* PrepareAsyncGetHotTopicRaw(::grpc::ClientContext* context, const ::weibo::Blank& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::weibo::PostRes>* GetPostByTopicIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request) override;
    ::grpc::ClientAsyncReader< ::weibo::PostRes>* AsyncGetPostByTopicIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::weibo::PostRes>* PrepareAsyncGetPostByTopicIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByTopicIdReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::weibo::PostRes>* GetPostByUserIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request) override;
    ::grpc::ClientAsyncReader< ::weibo::PostRes>* AsyncGetPostByUserIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::weibo::PostRes>* PrepareAsyncGetPostByUserIdRaw(::grpc::ClientContext* context, const ::weibo::GetPostByUserIdReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::weibo::PostRes>* PostFeedByRecommendRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request) override;
    ::grpc::ClientAsyncReader< ::weibo::PostRes>* AsyncPostFeedByRecommendRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::weibo::PostRes>* PrepareAsyncPostFeedByRecommendRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::weibo::PostRes>* PostFeedByFollowRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request) override;
    ::grpc::ClientAsyncReader< ::weibo::PostRes>* AsyncPostFeedByFollowRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::weibo::PostRes>* PrepareAsyncPostFeedByFollowRaw(::grpc::ClientContext* context, const ::weibo::PostFeedReq& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Regist_;
    const ::grpc::internal::RpcMethod rpcmethod_Login_;
    const ::grpc::internal::RpcMethod rpcmethod_PublishPost_;
    const ::grpc::internal::RpcMethod rpcmethod_Follow_;
    const ::grpc::internal::RpcMethod rpcmethod_CommentOnPost_;
    const ::grpc::internal::RpcMethod rpcmethod_Like_;
    const ::grpc::internal::RpcMethod rpcmethod_GetHot_;
    const ::grpc::internal::RpcMethod rpcmethod_GetHotTopic_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPostByTopicId_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPostByUserId_;
    const ::grpc::internal::RpcMethod rpcmethod_PostFeedByRecommend_;
    const ::grpc::internal::RpcMethod rpcmethod_PostFeedByFollow_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Regist(::grpc::ServerContext* context, const ::weibo::RegistReq* request, ::weibo::RegistRes* response);
    virtual ::grpc::Status Login(::grpc::ServerContext* context, const ::weibo::LoginReq* request, ::weibo::LoginRes* response);
    virtual ::grpc::Status PublishPost(::grpc::ServerContext* context, const ::weibo::PublishPostReq* request, ::weibo::PublishPostRes* response);
    virtual ::grpc::Status Follow(::grpc::ServerContext* context, const ::weibo::FollowReq* request, ::weibo::Response* response);
    virtual ::grpc::Status CommentOnPost(::grpc::ServerContext* context, const ::weibo::CommentReq* request, ::weibo::Response* response);
    virtual ::grpc::Status Like(::grpc::ServerContext* context, const ::weibo::LikeReq* request, ::weibo::Response* response);
    virtual ::grpc::Status GetHot(::grpc::ServerContext* context, const ::weibo::GetHotPostReq* request, ::grpc::ServerWriter< ::weibo::PostRes>* writer);
    virtual ::grpc::Status GetHotTopic(::grpc::ServerContext* context, const ::weibo::Blank* request, ::grpc::ServerWriter< ::weibo::HotTopicRes>* writer);
    virtual ::grpc::Status GetPostByTopicId(::grpc::ServerContext* context, const ::weibo::GetPostByTopicIdReq* request, ::grpc::ServerWriter< ::weibo::PostRes>* writer);
    virtual ::grpc::Status GetPostByUserId(::grpc::ServerContext* context, const ::weibo::GetPostByUserIdReq* request, ::grpc::ServerWriter< ::weibo::PostRes>* writer);
    virtual ::grpc::Status PostFeedByRecommend(::grpc::ServerContext* context, const ::weibo::PostFeedReq* request, ::grpc::ServerWriter< ::weibo::PostRes>* writer);
    virtual ::grpc::Status PostFeedByFollow(::grpc::ServerContext* context, const ::weibo::PostFeedReq* request, ::grpc::ServerWriter< ::weibo::PostRes>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_Regist : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Regist() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Regist() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Regist(::grpc::ServerContext* /*context*/, const ::weibo::RegistReq* /*request*/, ::weibo::RegistRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegist(::grpc::ServerContext* context, ::weibo::RegistReq* request, ::grpc::ServerAsyncResponseWriter< ::weibo::RegistRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Login() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::weibo::LoginReq* /*request*/, ::weibo::LoginRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::weibo::LoginReq* request, ::grpc::ServerAsyncResponseWriter< ::weibo::LoginRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PublishPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PublishPost() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_PublishPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishPost(::grpc::ServerContext* /*context*/, const ::weibo::PublishPostReq* /*request*/, ::weibo::PublishPostRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPublishPost(::grpc::ServerContext* context, ::weibo::PublishPostReq* request, ::grpc::ServerAsyncResponseWriter< ::weibo::PublishPostRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Follow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Follow() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_Follow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Follow(::grpc::ServerContext* /*context*/, const ::weibo::FollowReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFollow(::grpc::ServerContext* context, ::weibo::FollowReq* request, ::grpc::ServerAsyncResponseWriter< ::weibo::Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CommentOnPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CommentOnPost() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_CommentOnPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommentOnPost(::grpc::ServerContext* /*context*/, const ::weibo::CommentReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCommentOnPost(::grpc::ServerContext* context, ::weibo::CommentReq* request, ::grpc::ServerAsyncResponseWriter< ::weibo::Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Like : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Like() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_Like() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Like(::grpc::ServerContext* /*context*/, const ::weibo::LikeReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLike(::grpc::ServerContext* context, ::weibo::LikeReq* request, ::grpc::ServerAsyncResponseWriter< ::weibo::Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetHot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetHot() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetHot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHot(::grpc::ServerContext* /*context*/, const ::weibo::GetHotPostReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHot(::grpc::ServerContext* context, ::weibo::GetHotPostReq* request, ::grpc::ServerAsyncWriter< ::weibo::PostRes>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(6, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetHotTopic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetHotTopic() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetHotTopic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHotTopic(::grpc::ServerContext* /*context*/, const ::weibo::Blank* /*request*/, ::grpc::ServerWriter< ::weibo::HotTopicRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHotTopic(::grpc::ServerContext* context, ::weibo::Blank* request, ::grpc::ServerAsyncWriter< ::weibo::HotTopicRes>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(7, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPostByTopicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPostByTopicId() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetPostByTopicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostByTopicId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByTopicIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPostByTopicId(::grpc::ServerContext* context, ::weibo::GetPostByTopicIdReq* request, ::grpc::ServerAsyncWriter< ::weibo::PostRes>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(8, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPostByUserId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPostByUserId() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetPostByUserId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostByUserId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByUserIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPostByUserId(::grpc::ServerContext* context, ::weibo::GetPostByUserIdReq* request, ::grpc::ServerAsyncWriter< ::weibo::PostRes>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PostFeedByRecommend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PostFeedByRecommend() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_PostFeedByRecommend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostFeedByRecommend(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostFeedByRecommend(::grpc::ServerContext* context, ::weibo::PostFeedReq* request, ::grpc::ServerAsyncWriter< ::weibo::PostRes>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PostFeedByFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PostFeedByFollow() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_PostFeedByFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostFeedByFollow(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostFeedByFollow(::grpc::ServerContext* context, ::weibo::PostFeedReq* request, ::grpc::ServerAsyncWriter< ::weibo::PostRes>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(11, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Regist<WithAsyncMethod_Login<WithAsyncMethod_PublishPost<WithAsyncMethod_Follow<WithAsyncMethod_CommentOnPost<WithAsyncMethod_Like<WithAsyncMethod_GetHot<WithAsyncMethod_GetHotTopic<WithAsyncMethod_GetPostByTopicId<WithAsyncMethod_GetPostByUserId<WithAsyncMethod_PostFeedByRecommend<WithAsyncMethod_PostFeedByFollow<Service > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Regist : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Regist() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::weibo::RegistReq, ::weibo::RegistRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::RegistReq* request, ::weibo::RegistRes* response) { return this->Regist(context, request, response); }));}
    void SetMessageAllocatorFor_Regist(
        ::grpc::MessageAllocator< ::weibo::RegistReq, ::weibo::RegistRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::weibo::RegistReq, ::weibo::RegistRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Regist() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Regist(::grpc::ServerContext* /*context*/, const ::weibo::RegistReq* /*request*/, ::weibo::RegistRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Regist(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::RegistReq* /*request*/, ::weibo::RegistRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Login() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::weibo::LoginReq, ::weibo::LoginRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::LoginReq* request, ::weibo::LoginRes* response) { return this->Login(context, request, response); }));}
    void SetMessageAllocatorFor_Login(
        ::grpc::MessageAllocator< ::weibo::LoginReq, ::weibo::LoginRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::weibo::LoginReq, ::weibo::LoginRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::weibo::LoginReq* /*request*/, ::weibo::LoginRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::LoginReq* /*request*/, ::weibo::LoginRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PublishPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PublishPost() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::weibo::PublishPostReq, ::weibo::PublishPostRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::PublishPostReq* request, ::weibo::PublishPostRes* response) { return this->PublishPost(context, request, response); }));}
    void SetMessageAllocatorFor_PublishPost(
        ::grpc::MessageAllocator< ::weibo::PublishPostReq, ::weibo::PublishPostRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::weibo::PublishPostReq, ::weibo::PublishPostRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PublishPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishPost(::grpc::ServerContext* /*context*/, const ::weibo::PublishPostReq* /*request*/, ::weibo::PublishPostRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PublishPost(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::PublishPostReq* /*request*/, ::weibo::PublishPostRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Follow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Follow() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::weibo::FollowReq, ::weibo::Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::FollowReq* request, ::weibo::Response* response) { return this->Follow(context, request, response); }));}
    void SetMessageAllocatorFor_Follow(
        ::grpc::MessageAllocator< ::weibo::FollowReq, ::weibo::Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::weibo::FollowReq, ::weibo::Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Follow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Follow(::grpc::ServerContext* /*context*/, const ::weibo::FollowReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Follow(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::FollowReq* /*request*/, ::weibo::Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CommentOnPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CommentOnPost() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::weibo::CommentReq, ::weibo::Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::CommentReq* request, ::weibo::Response* response) { return this->CommentOnPost(context, request, response); }));}
    void SetMessageAllocatorFor_CommentOnPost(
        ::grpc::MessageAllocator< ::weibo::CommentReq, ::weibo::Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::weibo::CommentReq, ::weibo::Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CommentOnPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommentOnPost(::grpc::ServerContext* /*context*/, const ::weibo::CommentReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CommentOnPost(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::CommentReq* /*request*/, ::weibo::Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Like : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Like() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::weibo::LikeReq, ::weibo::Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::LikeReq* request, ::weibo::Response* response) { return this->Like(context, request, response); }));}
    void SetMessageAllocatorFor_Like(
        ::grpc::MessageAllocator< ::weibo::LikeReq, ::weibo::Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::weibo::LikeReq, ::weibo::Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Like() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Like(::grpc::ServerContext* /*context*/, const ::weibo::LikeReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Like(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::LikeReq* /*request*/, ::weibo::Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetHot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetHot() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackServerStreamingHandler< ::weibo::GetHotPostReq, ::weibo::PostRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::GetHotPostReq* request) { return this->GetHot(context, request); }));
    }
    ~WithCallbackMethod_GetHot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHot(::grpc::ServerContext* /*context*/, const ::weibo::GetHotPostReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::weibo::PostRes>* GetHot(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::GetHotPostReq* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetHotTopic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetHotTopic() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackServerStreamingHandler< ::weibo::Blank, ::weibo::HotTopicRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::Blank* request) { return this->GetHotTopic(context, request); }));
    }
    ~WithCallbackMethod_GetHotTopic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHotTopic(::grpc::ServerContext* /*context*/, const ::weibo::Blank* /*request*/, ::grpc::ServerWriter< ::weibo::HotTopicRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::weibo::HotTopicRes>* GetHotTopic(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::Blank* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPostByTopicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPostByTopicId() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackServerStreamingHandler< ::weibo::GetPostByTopicIdReq, ::weibo::PostRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::GetPostByTopicIdReq* request) { return this->GetPostByTopicId(context, request); }));
    }
    ~WithCallbackMethod_GetPostByTopicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostByTopicId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByTopicIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::weibo::PostRes>* GetPostByTopicId(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::GetPostByTopicIdReq* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPostByUserId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPostByUserId() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::weibo::GetPostByUserIdReq, ::weibo::PostRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::GetPostByUserIdReq* request) { return this->GetPostByUserId(context, request); }));
    }
    ~WithCallbackMethod_GetPostByUserId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostByUserId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByUserIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::weibo::PostRes>* GetPostByUserId(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::GetPostByUserIdReq* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PostFeedByRecommend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PostFeedByRecommend() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::weibo::PostFeedReq, ::weibo::PostRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::PostFeedReq* request) { return this->PostFeedByRecommend(context, request); }));
    }
    ~WithCallbackMethod_PostFeedByRecommend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostFeedByRecommend(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::weibo::PostRes>* PostFeedByRecommend(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PostFeedByFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PostFeedByFollow() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackServerStreamingHandler< ::weibo::PostFeedReq, ::weibo::PostRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::weibo::PostFeedReq* request) { return this->PostFeedByFollow(context, request); }));
    }
    ~WithCallbackMethod_PostFeedByFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostFeedByFollow(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::weibo::PostRes>* PostFeedByFollow(
      ::grpc::CallbackServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Regist<WithCallbackMethod_Login<WithCallbackMethod_PublishPost<WithCallbackMethod_Follow<WithCallbackMethod_CommentOnPost<WithCallbackMethod_Like<WithCallbackMethod_GetHot<WithCallbackMethod_GetHotTopic<WithCallbackMethod_GetPostByTopicId<WithCallbackMethod_GetPostByUserId<WithCallbackMethod_PostFeedByRecommend<WithCallbackMethod_PostFeedByFollow<Service > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Regist : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Regist() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Regist() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Regist(::grpc::ServerContext* /*context*/, const ::weibo::RegistReq* /*request*/, ::weibo::RegistRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Login() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::weibo::LoginReq* /*request*/, ::weibo::LoginRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PublishPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PublishPost() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_PublishPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishPost(::grpc::ServerContext* /*context*/, const ::weibo::PublishPostReq* /*request*/, ::weibo::PublishPostRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Follow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Follow() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_Follow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Follow(::grpc::ServerContext* /*context*/, const ::weibo::FollowReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CommentOnPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CommentOnPost() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_CommentOnPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommentOnPost(::grpc::ServerContext* /*context*/, const ::weibo::CommentReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Like : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Like() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_Like() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Like(::grpc::ServerContext* /*context*/, const ::weibo::LikeReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetHot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetHot() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetHot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHot(::grpc::ServerContext* /*context*/, const ::weibo::GetHotPostReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetHotTopic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetHotTopic() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetHotTopic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHotTopic(::grpc::ServerContext* /*context*/, const ::weibo::Blank* /*request*/, ::grpc::ServerWriter< ::weibo::HotTopicRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPostByTopicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPostByTopicId() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetPostByTopicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostByTopicId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByTopicIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPostByUserId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPostByUserId() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetPostByUserId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostByUserId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByUserIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PostFeedByRecommend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PostFeedByRecommend() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_PostFeedByRecommend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostFeedByRecommend(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PostFeedByFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PostFeedByFollow() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_PostFeedByFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostFeedByFollow(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Regist : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Regist() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Regist() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Regist(::grpc::ServerContext* /*context*/, const ::weibo::RegistReq* /*request*/, ::weibo::RegistRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegist(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Login() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::weibo::LoginReq* /*request*/, ::weibo::LoginRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PublishPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PublishPost() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_PublishPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishPost(::grpc::ServerContext* /*context*/, const ::weibo::PublishPostReq* /*request*/, ::weibo::PublishPostRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPublishPost(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Follow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Follow() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_Follow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Follow(::grpc::ServerContext* /*context*/, const ::weibo::FollowReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFollow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CommentOnPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CommentOnPost() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_CommentOnPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommentOnPost(::grpc::ServerContext* /*context*/, const ::weibo::CommentReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCommentOnPost(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Like : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Like() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_Like() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Like(::grpc::ServerContext* /*context*/, const ::weibo::LikeReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLike(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetHot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetHot() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetHot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHot(::grpc::ServerContext* /*context*/, const ::weibo::GetHotPostReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHot(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(6, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetHotTopic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetHotTopic() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetHotTopic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHotTopic(::grpc::ServerContext* /*context*/, const ::weibo::Blank* /*request*/, ::grpc::ServerWriter< ::weibo::HotTopicRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHotTopic(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(7, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPostByTopicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPostByTopicId() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetPostByTopicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostByTopicId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByTopicIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPostByTopicId(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(8, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPostByUserId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPostByUserId() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetPostByUserId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostByUserId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByUserIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPostByUserId(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PostFeedByRecommend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PostFeedByRecommend() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_PostFeedByRecommend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostFeedByRecommend(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostFeedByRecommend(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PostFeedByFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PostFeedByFollow() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_PostFeedByFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostFeedByFollow(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostFeedByFollow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(11, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Regist : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Regist() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Regist(context, request, response); }));
    }
    ~WithRawCallbackMethod_Regist() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Regist(::grpc::ServerContext* /*context*/, const ::weibo::RegistReq* /*request*/, ::weibo::RegistRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Regist(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Login() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Login(context, request, response); }));
    }
    ~WithRawCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::weibo::LoginReq* /*request*/, ::weibo::LoginRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PublishPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PublishPost() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PublishPost(context, request, response); }));
    }
    ~WithRawCallbackMethod_PublishPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishPost(::grpc::ServerContext* /*context*/, const ::weibo::PublishPostReq* /*request*/, ::weibo::PublishPostRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PublishPost(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Follow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Follow() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Follow(context, request, response); }));
    }
    ~WithRawCallbackMethod_Follow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Follow(::grpc::ServerContext* /*context*/, const ::weibo::FollowReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Follow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CommentOnPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CommentOnPost() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CommentOnPost(context, request, response); }));
    }
    ~WithRawCallbackMethod_CommentOnPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommentOnPost(::grpc::ServerContext* /*context*/, const ::weibo::CommentReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CommentOnPost(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Like : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Like() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Like(context, request, response); }));
    }
    ~WithRawCallbackMethod_Like() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Like(::grpc::ServerContext* /*context*/, const ::weibo::LikeReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Like(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetHot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetHot() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetHot(context, request); }));
    }
    ~WithRawCallbackMethod_GetHot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHot(::grpc::ServerContext* /*context*/, const ::weibo::GetHotPostReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetHot(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetHotTopic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetHotTopic() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetHotTopic(context, request); }));
    }
    ~WithRawCallbackMethod_GetHotTopic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHotTopic(::grpc::ServerContext* /*context*/, const ::weibo::Blank* /*request*/, ::grpc::ServerWriter< ::weibo::HotTopicRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetHotTopic(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPostByTopicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPostByTopicId() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetPostByTopicId(context, request); }));
    }
    ~WithRawCallbackMethod_GetPostByTopicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostByTopicId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByTopicIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetPostByTopicId(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPostByUserId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPostByUserId() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetPostByUserId(context, request); }));
    }
    ~WithRawCallbackMethod_GetPostByUserId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostByUserId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByUserIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetPostByUserId(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PostFeedByRecommend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PostFeedByRecommend() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->PostFeedByRecommend(context, request); }));
    }
    ~WithRawCallbackMethod_PostFeedByRecommend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostFeedByRecommend(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* PostFeedByRecommend(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PostFeedByFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PostFeedByFollow() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->PostFeedByFollow(context, request); }));
    }
    ~WithRawCallbackMethod_PostFeedByFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostFeedByFollow(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* PostFeedByFollow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Regist : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Regist() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::weibo::RegistReq, ::weibo::RegistRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::weibo::RegistReq, ::weibo::RegistRes>* streamer) {
                       return this->StreamedRegist(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Regist() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Regist(::grpc::ServerContext* /*context*/, const ::weibo::RegistReq* /*request*/, ::weibo::RegistRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRegist(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::weibo::RegistReq,::weibo::RegistRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Login() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::weibo::LoginReq, ::weibo::LoginRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::weibo::LoginReq, ::weibo::LoginRes>* streamer) {
                       return this->StreamedLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::weibo::LoginReq* /*request*/, ::weibo::LoginRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::weibo::LoginReq,::weibo::LoginRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PublishPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PublishPost() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::weibo::PublishPostReq, ::weibo::PublishPostRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::weibo::PublishPostReq, ::weibo::PublishPostRes>* streamer) {
                       return this->StreamedPublishPost(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PublishPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PublishPost(::grpc::ServerContext* /*context*/, const ::weibo::PublishPostReq* /*request*/, ::weibo::PublishPostRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPublishPost(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::weibo::PublishPostReq,::weibo::PublishPostRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Follow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Follow() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::weibo::FollowReq, ::weibo::Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::weibo::FollowReq, ::weibo::Response>* streamer) {
                       return this->StreamedFollow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Follow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Follow(::grpc::ServerContext* /*context*/, const ::weibo::FollowReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFollow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::weibo::FollowReq,::weibo::Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CommentOnPost : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CommentOnPost() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::weibo::CommentReq, ::weibo::Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::weibo::CommentReq, ::weibo::Response>* streamer) {
                       return this->StreamedCommentOnPost(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CommentOnPost() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CommentOnPost(::grpc::ServerContext* /*context*/, const ::weibo::CommentReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCommentOnPost(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::weibo::CommentReq,::weibo::Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Like : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Like() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::weibo::LikeReq, ::weibo::Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::weibo::LikeReq, ::weibo::Response>* streamer) {
                       return this->StreamedLike(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Like() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Like(::grpc::ServerContext* /*context*/, const ::weibo::LikeReq* /*request*/, ::weibo::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLike(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::weibo::LikeReq,::weibo::Response>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Regist<WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_PublishPost<WithStreamedUnaryMethod_Follow<WithStreamedUnaryMethod_CommentOnPost<WithStreamedUnaryMethod_Like<Service > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_GetHot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetHot() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::weibo::GetHotPostReq, ::weibo::PostRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::weibo::GetHotPostReq, ::weibo::PostRes>* streamer) {
                       return this->StreamedGetHot(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetHot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetHot(::grpc::ServerContext* /*context*/, const ::weibo::GetHotPostReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetHot(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::weibo::GetHotPostReq,::weibo::PostRes>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetHotTopic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetHotTopic() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::weibo::Blank, ::weibo::HotTopicRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::weibo::Blank, ::weibo::HotTopicRes>* streamer) {
                       return this->StreamedGetHotTopic(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetHotTopic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetHotTopic(::grpc::ServerContext* /*context*/, const ::weibo::Blank* /*request*/, ::grpc::ServerWriter< ::weibo::HotTopicRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetHotTopic(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::weibo::Blank,::weibo::HotTopicRes>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetPostByTopicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetPostByTopicId() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::weibo::GetPostByTopicIdReq, ::weibo::PostRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::weibo::GetPostByTopicIdReq, ::weibo::PostRes>* streamer) {
                       return this->StreamedGetPostByTopicId(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetPostByTopicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPostByTopicId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByTopicIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetPostByTopicId(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::weibo::GetPostByTopicIdReq,::weibo::PostRes>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetPostByUserId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetPostByUserId() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::weibo::GetPostByUserIdReq, ::weibo::PostRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::weibo::GetPostByUserIdReq, ::weibo::PostRes>* streamer) {
                       return this->StreamedGetPostByUserId(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetPostByUserId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPostByUserId(::grpc::ServerContext* /*context*/, const ::weibo::GetPostByUserIdReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetPostByUserId(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::weibo::GetPostByUserIdReq,::weibo::PostRes>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_PostFeedByRecommend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_PostFeedByRecommend() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::weibo::PostFeedReq, ::weibo::PostRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::weibo::PostFeedReq, ::weibo::PostRes>* streamer) {
                       return this->StreamedPostFeedByRecommend(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_PostFeedByRecommend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PostFeedByRecommend(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedPostFeedByRecommend(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::weibo::PostFeedReq,::weibo::PostRes>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_PostFeedByFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_PostFeedByFollow() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::weibo::PostFeedReq, ::weibo::PostRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::weibo::PostFeedReq, ::weibo::PostRes>* streamer) {
                       return this->StreamedPostFeedByFollow(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_PostFeedByFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PostFeedByFollow(::grpc::ServerContext* /*context*/, const ::weibo::PostFeedReq* /*request*/, ::grpc::ServerWriter< ::weibo::PostRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedPostFeedByFollow(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::weibo::PostFeedReq,::weibo::PostRes>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_GetHot<WithSplitStreamingMethod_GetHotTopic<WithSplitStreamingMethod_GetPostByTopicId<WithSplitStreamingMethod_GetPostByUserId<WithSplitStreamingMethod_PostFeedByRecommend<WithSplitStreamingMethod_PostFeedByFollow<Service > > > > > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_Regist<WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_PublishPost<WithStreamedUnaryMethod_Follow<WithStreamedUnaryMethod_CommentOnPost<WithStreamedUnaryMethod_Like<WithSplitStreamingMethod_GetHot<WithSplitStreamingMethod_GetHotTopic<WithSplitStreamingMethod_GetPostByTopicId<WithSplitStreamingMethod_GetPostByUserId<WithSplitStreamingMethod_PostFeedByRecommend<WithSplitStreamingMethod_PostFeedByFollow<Service > > > > > > > > > > > > StreamedService;
};

}  // namespace weibo


#endif  // GRPC_weibo_2eproto__INCLUDED
